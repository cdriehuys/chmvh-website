app_name: app
app_package: app

app_dir: /opt/{{ app_name }}

app_repo_branch: master
app_packages:
  - git
  - python-pip
app_extra_packages: []

virtualenv: /opt/virtualenvs/env
virtualenv_python: python2
virtualenv_requirements: "{{ app_dir }}/requirements.txt"

gunicorn_bin: "{{ virtualenv }}/bin/gunicorn"
gunicorn_user: gunicorn
gunicorn_user_group: null
gunicorn_service_conf: /etc/systemd/system/gunicorn.service
gunicorn_workers: "{{ 2 * ansible_processor_cores + 1 }}"
gunicorn_wsgi_app: "{{ app_package }}.wsgi:application"


# Django
django_local_settings: "{{ app_dir }}/{{ app_package }}/{{ app_package }}/local_settings.py"

# Django Settings
django_admins: []
django_allowed_hosts: []
django_app_path: "{{ app_dir }}/{{ app_package }}"
django_databases: {}
django_debug: "True"
django_extra_settings: {}
django_log_file: null
django_logging_config: null
django_media_root: null
django_secret_key: "{{ vault_django_secret_key }}"
django_static_root: null


# Celery
celery_app: "{{ app_package }}"
celery_bin: '{{ virtualenv }}/bin/celery'
celery_enabled: no
celery_service_conf: /etc/systemd/system/celery.service
celery_user: celery
celery_working_dir: '{{ app_dir }}/{{ app_package }}'

# Celery daemon config
celeryd_log_dir: /var/log/celery
celeryd_log_file: '{{ celeryd_log_dir }}/worker%n.log'
celeryd_log_level: INFO
celeryd_nodes: worker
celeryd_opts: ''
celeryd_pid_dir: /var/run/celery
celeryd_pid_file: '{{ celeryd_pid_dir }}/worker%n.pid'
